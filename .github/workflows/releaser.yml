name: Releaser
on:
  push:

jobs:

  binary_linux_amd64:
    runs-on: ubuntu-latest
    steps:
         - uses: actions/checkout@v2
         - name: install cargo deps and build avail
           shell: bash
           run: |
            curl https://sh.rustup.rs -sSf | sh -s -- -y
            source "$HOME/.cargo/env"
            cargo build --release -p avail-light
            mv target/release/avail-light target/release/avail-light-linux-amd64
         - uses: actions/upload-artifact@v2
           with:
             name: avail-light-linux-amd64-binary
             path: target/release/avail-light-linux-amd64

  # compile all binaries from previous jobs into single release
  # binary_publish:
  #   needs: [binary_linux_amd64]
  #   runs-on: ubuntu-latest
  #   steps:
  #        - uses: actions/download-artifact@v2
  #          with:
  #            name: avail-light-linux-amd64-binary
  #        - name: Prepare
  #          id: prepare
  #          run: |
  #              TAG=${GITHUB_REF#refs/tags/}
  #              echo ::set-output name=tag_name::${TAG}
  #        - name: publish binaries
  #          uses: svenstaro/upload-release-action@v2
  #          with:
  #            repo_token: ${{ secrets.PAT_TOKEN }}
  #            file: /home/runner/work/avail/avail/data-avail*
  #            release_name: ${{ steps.prepare.outputs.tag_name }}
  #            tag: ${{ steps.prepare.outputs.tag_name }}
  #            overwrite: true
  #            file_glob: true

  # build avail-light image and publish to dockerhub
  # docker_linux_amd64:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v2
  #     - name: Set up Docker Buildx
  #       id: buildx
  #       uses: docker/setup-buildx-action@v2
  #     - name: Prepare
  #       id: prepare
  #       run: |
  #           TAG=${GITHUB_REF#refs/tags/}
  #           echo ::set-output name=tag_name::${TAG}
  #     - name: Login to DockerHub
  #       uses: docker/login-action@v2
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
  #     - name: Build and push images
  #       uses: docker/build-push-action@v3
  #       with:
  #         builder: ${{ steps.buildx.outputs.name }}
  #         context: .
  #         file: ./Dockerfile
  #         platforms: linux/amd64
  #         push: true
  #         tags: 0xpolygon/avail:${{ steps.prepare.outputs.tag_name }}
